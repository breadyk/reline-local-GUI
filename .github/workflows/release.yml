name: Manual Build & Release

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: "Tag for release (e.g. v1.0.0)"
        required: true
      release_notes:
        description: "Release notes"
        required: false
        default: ""

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Clean up node_modules (Windows only)
        if: matrix.os == 'windows-latest'
        run: |
          if (Test-Path node_modules) { Remove-Item -Recurse -Force node_modules }
          npm cache clean --force
        shell: pwsh

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            npm run dist
          else
            npm run distlin
          fi
        shell: bash

      - name: Archive build
        run: |
          mkdir -p artifacts
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            cd release/win-unpacked
            zip -r ../../artifacts/reline-gui-win.zip .
          else
            cd release/linux-unpacked
            zip -r ../../artifacts/reline-gui-linux.zip .
          fi
        shell: bash

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: artifacts/*.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          name: Release ${{ github.event.inputs.release_tag }}
          body: ${{ github.event.inputs.release_notes }}
          files: dist/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}